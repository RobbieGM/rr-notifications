{"version":3,"sources":["webpack:///./src/helpers/utils.js","webpack:///./src/components/Container/Container.js","webpack:///./src/components/Notification/Notification.js","webpack:///./src/animations/animations.js","webpack:///./src/components/NotificationContainer/NotificationContainer.js","webpack:///./src/components/NotificationsProvider/NotificationsProvider.js","webpack:///./src/components/NotificationsProvider/NotificationsProvider.mdx"],"names":["COORDINATES","propTypes","position","PropTypes","array","isRequired","Container","styled","div","_templateObject","props","indexOf","map","value","index","concat","isVisible","bool","notificationHeight","number","animationDuration","animationEasing","string","slideFromSide","Notification","Notification_templateObject","_ref","animatedMargin","getAnimatedMargin","height","keyframes","_templateObject3","horizontalShow","_templateObject4","horizontalHide","animations_templateObject","verticalShow","_templateObject2","verticalHide","miliseconds","toString","NotificationContainer","children","notificationRef","useRef","_useState2","_slicedToArray","useState","updateHeight","useLayoutEffect","current","clientHeight","react_default","a","createElement","Notification_Notification","ref","NotificationsContext","createContext","NotificationsProvider","renderNotification","dismissAfter","automaticDismissalTimers","manualDismissalTimers","NotificationsProvider_slicedToArray","notifications","updateNotifications","removeNotification","id","clearTimeout","state","_objectSpread","_defineProperty","hideNotification","setTimeout","Object","keys","filter","notificationId","reduce","acc","unmountNotification","clearAllTimeouts","_toConsumableArray","values","forEach","timeout","useEffect","Provider","showNotification","payload","arguments","length","undefined","Date","now","Container_Container","_ref2","components_NotificationContainer_NotificationContainer","key","defaultProps","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","docz__WEBPACK_IMPORTED_MODULE_2__","of"],"mappings":"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","file":"static/js/src-components-notifications-provider-notifications-provider.45f6ff1e.js","sourcesContent":["const COORDINATES = ['top', 'right', 'bottom', 'left'];\n\nexport const convertToCssPosition = position => position.map((value, index) => (\n  `${COORDINATES[index]}: ${value};`\n));\n\nexport const convertToCssDuration = miliseconds => `${(miliseconds / 1000).toString()}s`;\n\nexport const getFlexDirection = position => (\n  position[COORDINATES.indexOf('top')] !== 'auto'\n    ? 'column'\n    : 'column-reverse'\n);\n\nexport const getAnimatedMargin = position => (\n  position[COORDINATES.indexOf('top')] !== 'auto'\n    ? 'top'\n    : 'bottom'\n);\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { convertToCssPosition, getFlexDirection } from '../../helpers/utils';\n\nconst propTypes = {\n  position: PropTypes.array.isRequired,\n};\n\nconst Container = styled.div`\n  position: fixed;\n  display: flex;\n  z-index: 999999;\n  height: 0;\n  flex-direction: ${props => getFlexDirection(props.position)};\n  ${props => convertToCssPosition(props.position)}\n`;\n\nContainer.propTypes = propTypes;\n\nexport default Container;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { convertToCssDuration, getAnimatedMargin } from '../../helpers/utils';\nimport {\n  horizontalShow,\n  horizontalHide,\n  verticalShow,\n  verticalHide,\n} from '../../animations/animations';\n\nconst propTypes = {\n  isVisible: PropTypes.bool.isRequired,\n  notificationHeight: PropTypes.number.isRequired,\n  position: PropTypes.array.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  animationEasing: PropTypes.string.isRequired,\n  slideFromSide: PropTypes.string.isRequired,\n};\n\nconst Notification = styled.div`\n  position: relative;\n  z-index: ${props => (props.isVisible ? 999999 : -1)};\n  animation: ${({ isVisible, position, slideFromSide, notificationHeight }) => {\n    const animatedMargin = getAnimatedMargin(position);\n    if (slideFromSide) {\n      return isVisible\n        ? horizontalShow(notificationHeight, animatedMargin, slideFromSide)\n        : horizontalHide(notificationHeight, animatedMargin, slideFromSide);\n    }\n    return isVisible\n      ? verticalShow(notificationHeight, animatedMargin)\n      : verticalHide(notificationHeight, animatedMargin);\n  }};\n  animation-timing-function: ${props => props.animationEasing};\n  animation-duration: ${props => convertToCssDuration(props.animationDuration)};\n  animation-fill-mode: forwards;\n`;\n\nNotification.propTypes = propTypes;\n\nexport default Notification;\n","import { keyframes } from 'styled-components';\n\nconst TRANSLATEX = 60;\n\nexport const verticalShow = (height, animatedMargin) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n    }\n    100% {\n      margin-${animatedMargin}: 0px;\n      opacity: 1;\n    }\n  `\n);\n\nexport const verticalHide = (height, animatedMargin) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: 0px;\n      opacity: 1;\n    }\n    100% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n    }\n  `\n);\n\nexport const horizontalShow = (height, animatedMargin, slideFromSide) => (\n  keyframes`\n    0% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    50% {\n      margin-${animatedMargin}: 0;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    100% {\n      margin-${animatedMargin}: 0;\n      opacity: 1;\n      transform: translateX(0%);\n    }\n  `\n);\n\nexport const horizontalHide = (height, animatedMargin, slideFromSide) => (\n  keyframes`\n    0%{\n      margin-${animatedMargin}: 0;\n      opacity: 1;\n      transform: translateX(0%);\n    }\n    50% {\n      margin-${animatedMargin}: 0;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n    100% {\n      margin-${animatedMargin}: ${-height}px;\n      opacity: 0;\n      transform: translateX(${slideFromSide === 'left' ? -TRANSLATEX : TRANSLATEX}%);\n    }\n  `\n);\n","import React, {\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  position: PropTypes.array.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  animationEasing: PropTypes.string.isRequired,\n  slideFromSide: PropTypes.string.isRequired,\n};\n\nconst NotificationContainer = ({\n  children,\n  position,\n  isVisible,\n  animationDuration,\n  animationEasing,\n  slideFromSide,\n}) => {\n  const notificationRef = useRef(null);\n  const [height, updateHeight] = useState(0);\n\n  useLayoutEffect(() => {\n    if (notificationRef.current) {\n      updateHeight(notificationRef.current.clientHeight);\n    }\n  }, [notificationRef]);\n\n  return (\n    <Notification\n      ref={notificationRef}\n      position={position}\n      notificationHeight={height}\n      isVisible={isVisible}\n      slideFromSide={slideFromSide}\n      animationEasing={animationEasing}\n      animationDuration={animationDuration}\n    >\n      {children}\n    </Notification>\n  );\n};\n\nNotificationContainer.propTypes = propTypes;\n\nexport default NotificationContainer;\n","import React, {\n  createContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container/Container';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\n\nexport const NotificationsContext = createContext({});\n\nconst propTypes = {\n  /** Children */\n  children: PropTypes.node.isRequired,\n  /** Render prop which passes down removeNotification function and notification payload */\n  renderNotification: PropTypes.func.isRequired,\n  /** Fixed position where all notifications are displayed */\n  position: PropTypes.array,\n  /** Duration of the show and hide animations in miliseconds */\n  animationDuration: PropTypes.number,\n  /** Animation timing function / cubic-bezier */\n  animationEasing: PropTypes.string,\n  /** Time in miliseconds after which the notification is automatically dismissed */\n  dismissAfter: PropTypes.number,\n  /**\n   * Horizontal direction which notification appears from. If not provided,\n   * the notification will appear from top or bottom, depending on position prop\n   * */\n  slideFromSide: PropTypes.string,\n};\n\nconst defaultProps = {\n  position: ['40px', '40px', 'auto', 'auto'],\n  animationDuration: 400,\n  animationEasing: 'ease',\n  dismissAfter: 6000,\n  slideFromSide: '',\n};\n\nconst NotificationsProvider = ({\n  children,\n  renderNotification,\n  position,\n  animationDuration,\n  animationEasing,\n  slideFromSide,\n  dismissAfter,\n}) => {\n  const automaticDismissalTimers = useRef({});\n  const manualDismissalTimers = useRef({});\n\n  const [notifications, updateNotifications] = useState({});\n\n  const hideNotification = id => updateNotifications(state => ({\n    ...state,\n    [id]: {\n      ...state[id],\n      isVisible: false,\n    },\n  }));\n\n  const unmountNotification = id => updateNotifications(state => (\n    Object.keys(state)\n      .filter(notificationId => notificationId !== id)\n      .reduce((acc, notificationId) => ({\n        ...acc,\n        [notificationId]: state[notificationId],\n      }), {})\n  ));\n\n  const removeNotification = id => () => {\n    clearTimeout(automaticDismissalTimers.current[id]);\n    hideNotification(id);\n    manualDismissalTimers.current[id] = setTimeout(() => {\n      unmountNotification(id);\n    }, animationDuration);\n  };\n\n  const showNotification = (payload = {}) => updateNotifications((state) => {\n    const id = Date.now().toString();\n    automaticDismissalTimers.current[id] = setTimeout(() => {\n      removeNotification(id)();\n    }, dismissAfter);\n    return {\n      ...state,\n      [id]: {\n        id,\n        isVisible: true,\n        payload,\n      },\n    };\n  });\n\n  const clearAllTimeouts = () => {\n    [\n      ...Object.values(manualDismissalTimers.current),\n      ...Object.values(automaticDismissalTimers.current),\n    ]\n      .forEach(timeout => clearTimeout(timeout));\n  };\n\n  useEffect(() => clearAllTimeouts, []);\n\n  return (\n    <NotificationsContext.Provider value={{ showNotification, removeNotification }}>\n      <Container position={position}>\n        {Object.values(notifications).map(({ id, payload, isVisible }) => (\n          <NotificationContainer\n            key={id}\n            position={position}\n            animationDuration={animationDuration}\n            animationEasing={animationEasing}\n            slideFromSide={slideFromSide}\n            dismissAfter={dismissAfter}\n            isVisible={isVisible}\n          >\n            {renderNotification({\n              removeNotification: removeNotification(id),\n              payload,\n            })}\n          </NotificationContainer>\n        ))}\n      </Container>\n      {children}\n    </NotificationsContext.Provider>\n  );\n};\n\nNotificationsProvider.propTypes = propTypes;\nNotificationsProvider.defaultProps = defaultProps;\n\nexport default NotificationsProvider;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable } from 'docz';\nimport NotificationsProvider from './NotificationsProvider';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"notificationsprovider\"}}>{`NotificationsProvider`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`NotificationsProvider component is just a context provider that takes a few configuration props.\nThe most important is renderNotification that allows for maximum flexibility when creating your\nown custom notification component.`}</MDXTag>\n<PropsTable of={NotificationsProvider} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}